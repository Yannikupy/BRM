syntax = "proto3";

package leads;
option go_package = "/pb";
import "google/protobuf/empty.proto";

service LeadsService {
  rpc GetLeads(GetLeadsRequest) returns (GetLeadsResponse) {}
  rpc GetLeadById(GetLeadByIdRequest) returns (GetLeadByIdResponse) {}
  rpc UpdateLead(UpdateLeadRequest) returns (UpdateLeadResponse) {}

  rpc GetStatuses(google.protobuf.Empty) returns (GetStatusesResponse) {}
  rpc GetStatusById(GetStatusByIdRequest) returns (GetStatusByIdResponse) {}
}

message Lead {
  uint64 id = 1;
  uint64 ad_id = 2;
  string title = 3;
  string description = 4;
  uint64 price = 5;
  uint64 status = 6;
  uint64 responsible = 7;
  uint64 company_id = 8;
  uint64 client_company = 9;
  uint64 client_employee = 10;
  int64 creation_date = 11;
  bool is_deleted = 12;
}

message Filter {
  uint64 limit = 1;
  uint64 offset = 2;
  uint64 status = 3;
  bool by_status = 4;
  uint64 responsible = 5;
  bool by_responsible = 6;
}

message UpdateLead {
  string title = 1;
  string description = 2;
  uint64 price = 3;
  uint64 status = 4;
  uint64 responsible = 5;
}

message GetLeadsRequest {
  uint64 company_id = 1;
  uint64 employee_id = 2;
  Filter filter = 3;
}

message GetLeadsResponse {
  repeated Lead leads = 1;
}

message GetLeadByIdRequest {
  uint64 company_id = 1;
  uint64 employee_id = 2;
  uint64 lead_id = 3;
}

message GetLeadByIdResponse {
  Lead lead = 1;
}

message UpdateLeadRequest {
  uint64 company_id = 1;
  uint64 employee_id = 2;
  uint64 id = 3;
  UpdateLead upd = 4;
}

message UpdateLeadResponse {
  Lead lead = 1;
}

message GetStatusesResponse {
  map <string, uint64> data = 1;
}

message GetStatusByIdRequest {
  uint64 id = 1;
}

message GetStatusByIdResponse {
  string status = 1;
}
